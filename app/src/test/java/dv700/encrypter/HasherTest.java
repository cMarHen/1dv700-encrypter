/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dv700.encrypter;

import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.Hashtable;

import org.junit.jupiter.api.Test;

import dv700.cipherApp.encryption.Hasher;

class HasherTest {
  int bitsize = 256;
  Hasher hasher = new Hasher(bitsize);
  Hashtable<Integer, Integer> table = new Hashtable<Integer, Integer>();

  @Test
  public void testSignatureSize() {
    Boolean isOfLengthThree = false;
    for (int i = 0; i < 2000; i++) {
      String hashed = hasher.hash(String.valueOf(i));
      if (hashed.length() == 3) {
        isOfLengthThree = true;
      } else {
        isOfLengthThree = false;
        break;
      }
    }
    assertTrue(isOfLengthThree);
  }

  @Test
  public void testMinMaxValue() {
    int min = 000;
    int max = bitsize;
    Boolean isBetweenMinMax = true;
    for (int i = 0; i < 2000; i++) {
      int hashed = Integer.parseInt(hasher.hash(String.valueOf(i)));
      if (hashed > max || hashed < min) {
        isBetweenMinMax = false;
        break;
      }
    }
    assertTrue(isBetweenMinMax);
  }
}
